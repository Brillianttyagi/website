# Generated by Django 3.0.8 on 2021-04-19 21:33

import account.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.files.storage
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('Representativename', models.CharField(blank=True, max_length=20, null=True)),
                ('Representativeimage', models.ImageField(blank=True, upload_to=account.models.get_file_path, verbose_name='image')),
                ('RepresentativeDocType', models.CharField(blank=True, choices=[('Aadhar', 'Aadhar'), ('PAN', 'PAN'), ('Passport', 'Passport')], max_length=10, null=True)),
                ('RepresentativeDoc', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(location='C:\\Users\\renewedcart.com\\seventhsq\\KYCDoc'), upload_to=account.models.get_file_path_company_repr_doc)),
                ('RepresentativeDOB', models.DateField(blank=True, null=True)),
                ('mobileNumber', models.TextField(max_length=13, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid mobile number', regex='^[6-9]\\d{9}$')])),
                ('mobileVerificationCode', models.CharField(blank=True, max_length=10)),
                ('isMobileNumberVerified', models.BooleanField(default=False)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('emailVerificationCode', models.CharField(blank=True, max_length=10)),
                ('isEmailVerified', models.BooleanField(default=False)),
                ('companyName', models.CharField(blank=True, max_length=250, null=True)),
                ('city', models.CharField(blank=True, max_length=250, null=True)),
                ('companyImage', models.ImageField(blank=True, upload_to=account.models.get_file_path_company, verbose_name='image')),
                ('companyAbout', models.CharField(blank=True, max_length=500, null=True)),
                ('companyCategory', models.CharField(blank=True, choices=[('Interior Items', 'Interior Items'), ('Construction', 'Construction')], max_length=20, null=True)),
                ('companyGSTNumber', models.CharField(blank=True, max_length=30, null=True)),
                ('companyPAN', models.CharField(blank=True, max_length=10, null=True)),
                ('companyCIN', models.CharField(blank=True, max_length=30, null=True)),
                ('companyKYCDocType', models.CharField(blank=True, choices=[('Certificate Of Incorporation', 'Certificate Of Incorporation'), ('GST Registration Certificate', 'GST Registration Certificate'), ('IT Return', 'IT Return'), ('Registration Certificate', 'Registration Certificate')], max_length=30, null=True)),
                ('companyKYCDOC', models.FileField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(location='C:\\Users\\renewedcart.com\\seventhsq\\KYCDoc'), upload_to=account.models.get_file_path_company_doc)),
                ('notificationCount', models.PositiveIntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
